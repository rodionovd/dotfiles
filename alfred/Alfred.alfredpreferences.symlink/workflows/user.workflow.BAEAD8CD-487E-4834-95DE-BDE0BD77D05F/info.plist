<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.alfredapp.andrew.gettingstarted.scriptfilteroutput</string>
	<key>connections</key>
	<dict/>
	<key>createdby</key>
	<string>Andrew Pepperrell</string>
	<key>description</key>
	<string>Alfred's script filter object is extremely powerful, and gives you control over the results displayed in Alfred</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Script Filter - Getting Started</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>127</integer>
				<key>keyword</key>
				<string>jsonformat</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>#
# Alfred Script Filter JSON format
#
# This example demonstrates all fields available for populating results.
#
# For an in-depth explanation, use the (?) help button to the bottom left.
#

cat &lt;&lt; EOB
{"items": [

	{
		"uid": "desktop",
		"type": "file",
		"title": "Desktop",
		"subtitle": "~/Desktop",
		"arg": "~/Desktop",
		"autocomplete": "Desktop",
		"icon": {
			"type": "fileicon",
			"path": "~/Desktop"
		}
	},

	{
		"valid": false,
		"uid": "flickr",
		"title": "Flickr",
		"icon": {
			"path": "flickr.png"
		}
	},

	{
		"uid": "image",
		"type": "file",
		"title": "My holiday photo",
		"subtitle": "~/Pictures/My holiday photo.jpg",
		"autocomplete": "My holiday photo",
		"icon": {
			"type": "filetype",
			"path": "public.jpeg"
		}
	},

	{
		"valid": false,
		"uid": "alfredapp",
		"title": "Alfred Website",
		"subtitle": "https://www.alfredapp.com/",
		"arg": "alfredapp.com",
		"autocomplete": "Alfred Website",
		"quicklookurl": "https://www.alfredapp.com/",
		"mods": {
			"alt": {
				"valid": true,
				"arg": "alfredapp.com/powerpack",
				"subtitle": "https://www.alfredapp.com/powerpack/"
			},
			"cmd": {
				"valid": true,
				"arg": "alfredapp.com/powerpack/buy/",
				"subtitle": "https://www.alfredapp.com/powerpack/buy/"
			},
		},
		"text": {
			"copy": "https://www.alfredapp.com/ (text here to copy)",
			"largetype": "https://www.alfredapp.com/ (text here for large type)"
		}
	}

]}
EOB</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>test.sh</string>
				<key>subtext</key>
				<string>Generate results into Alfred from JSON</string>
				<key>title</key>
				<string>Script Filter JSON format</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>50B0CD10-4D52-4898-9C05-DD3A34A829C3</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Alfred's Script Filter object is extremely powerful, and gives you control over the results displayed in Alfred.

Alfred 3 now supports JSON, which is the recommended format. XML is also supported for legacy Alfred 2 workflows, and has been updated to include the new features.

A new option now exists for Script Filters, "Alfred filters results". This allows you to return a whole list of results, let Alfred do the subsequent filtering with extreme performance. When this option is selected, your script will be called once with no argument.</string>
	<key>uidata</key>
	<dict>
		<key>50B0CD10-4D52-4898-9C05-DD3A34A829C3</key>
		<dict>
			<key>note</key>
			<string>Alfred 3 now supports JSON as the Script Filter output. This is the recommended output.</string>
			<key>xpos</key>
			<integer>420</integer>
			<key>ypos</key>
			<integer>100</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>1.0</string>
	<key>webaddress</key>
	<string>https://www.alfredapp.com</string>
</dict>
</plist>
